// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: KinectFrameMessage.proto

#ifndef PROTOBUF_KinectFrameMessage_2eproto__INCLUDED
#define PROTOBUF_KinectFrameMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class KinectFrameMessage;
class KinectFrameMessageDefaultTypeInternal;
extern KinectFrameMessageDefaultTypeInternal _KinectFrameMessage_default_instance_;

namespace protobuf_KinectFrameMessage_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_KinectFrameMessage_2eproto

// ===================================================================

class KinectFrameMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KinectFrameMessage) */ {
 public:
  KinectFrameMessage();
  virtual ~KinectFrameMessage();

  KinectFrameMessage(const KinectFrameMessage& from);

  inline KinectFrameMessage& operator=(const KinectFrameMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const KinectFrameMessage& default_instance();

  static inline const KinectFrameMessage* internal_default_instance() {
    return reinterpret_cast<const KinectFrameMessage*>(
               &_KinectFrameMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(KinectFrameMessage* other);

  // implements Message ----------------------------------------------

  inline KinectFrameMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  KinectFrameMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const KinectFrameMessage& from);
  void MergeFrom(const KinectFrameMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(KinectFrameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required bytes video_data = 1;
  bool has_video_data() const;
  void clear_video_data();
  static const int kVideoDataFieldNumber = 1;
  const ::std::string& video_data() const;
  void set_video_data(const ::std::string& value);
  #if LANG_CXX11
  void set_video_data(::std::string&& value);
  #endif
  void set_video_data(const char* value);
  void set_video_data(const void* value, size_t size);
  ::std::string* mutable_video_data();
  ::std::string* release_video_data();
  void set_allocated_video_data(::std::string* video_data);

  // required bytes depth_data = 2;
  bool has_depth_data() const;
  void clear_depth_data();
  static const int kDepthDataFieldNumber = 2;
  const ::std::string& depth_data() const;
  void set_depth_data(const ::std::string& value);
  #if LANG_CXX11
  void set_depth_data(::std::string&& value);
  #endif
  void set_depth_data(const char* value);
  void set_depth_data(const void* value, size_t size);
  ::std::string* mutable_depth_data();
  ::std::string* release_depth_data();
  void set_allocated_depth_data(::std::string* depth_data);

  // required uint32 timestamp = 3;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 3;
  ::google::protobuf::uint32 timestamp() const;
  void set_timestamp(::google::protobuf::uint32 value);

  // optional uint32 height = 4;
  bool has_height() const;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::uint32 height() const;
  void set_height(::google::protobuf::uint32 value);

  // optional uint32 width = 5;
  bool has_width() const;
  void clear_width();
  static const int kWidthFieldNumber = 5;
  ::google::protobuf::uint32 width() const;
  void set_width(::google::protobuf::uint32 value);

  // optional uint32 depth = 6;
  bool has_depth() const;
  void clear_depth();
  static const int kDepthFieldNumber = 6;
  ::google::protobuf::uint32 depth() const;
  void set_depth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KinectFrameMessage)
 private:
  void set_has_video_data();
  void clear_has_video_data();
  void set_has_depth_data();
  void clear_has_depth_data();
  void set_has_timestamp();
  void clear_has_timestamp();
  void set_has_height();
  void clear_has_height();
  void set_has_width();
  void clear_has_width();
  void set_has_depth();
  void clear_has_depth();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr video_data_;
  ::google::protobuf::internal::ArenaStringPtr depth_data_;
  ::google::protobuf::uint32 timestamp_;
  ::google::protobuf::uint32 height_;
  ::google::protobuf::uint32 width_;
  ::google::protobuf::uint32 depth_;
  friend struct protobuf_KinectFrameMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// KinectFrameMessage

// required bytes video_data = 1;
inline bool KinectFrameMessage::has_video_data() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void KinectFrameMessage::set_has_video_data() {
  _has_bits_[0] |= 0x00000001u;
}
inline void KinectFrameMessage::clear_has_video_data() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void KinectFrameMessage::clear_video_data() {
  video_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_video_data();
}
inline const ::std::string& KinectFrameMessage::video_data() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.video_data)
  return video_data_.GetNoArena();
}
inline void KinectFrameMessage::set_video_data(const ::std::string& value) {
  set_has_video_data();
  video_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KinectFrameMessage.video_data)
}
#if LANG_CXX11
inline void KinectFrameMessage::set_video_data(::std::string&& value) {
  set_has_video_data();
  video_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KinectFrameMessage.video_data)
}
#endif
inline void KinectFrameMessage::set_video_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_video_data();
  video_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KinectFrameMessage.video_data)
}
inline void KinectFrameMessage::set_video_data(const void* value, size_t size) {
  set_has_video_data();
  video_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KinectFrameMessage.video_data)
}
inline ::std::string* KinectFrameMessage::mutable_video_data() {
  set_has_video_data();
  // @@protoc_insertion_point(field_mutable:KinectFrameMessage.video_data)
  return video_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KinectFrameMessage::release_video_data() {
  // @@protoc_insertion_point(field_release:KinectFrameMessage.video_data)
  clear_has_video_data();
  return video_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KinectFrameMessage::set_allocated_video_data(::std::string* video_data) {
  if (video_data != NULL) {
    set_has_video_data();
  } else {
    clear_has_video_data();
  }
  video_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), video_data);
  // @@protoc_insertion_point(field_set_allocated:KinectFrameMessage.video_data)
}

// required bytes depth_data = 2;
inline bool KinectFrameMessage::has_depth_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void KinectFrameMessage::set_has_depth_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void KinectFrameMessage::clear_has_depth_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void KinectFrameMessage::clear_depth_data() {
  depth_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_depth_data();
}
inline const ::std::string& KinectFrameMessage::depth_data() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.depth_data)
  return depth_data_.GetNoArena();
}
inline void KinectFrameMessage::set_depth_data(const ::std::string& value) {
  set_has_depth_data();
  depth_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KinectFrameMessage.depth_data)
}
#if LANG_CXX11
inline void KinectFrameMessage::set_depth_data(::std::string&& value) {
  set_has_depth_data();
  depth_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KinectFrameMessage.depth_data)
}
#endif
inline void KinectFrameMessage::set_depth_data(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_depth_data();
  depth_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KinectFrameMessage.depth_data)
}
inline void KinectFrameMessage::set_depth_data(const void* value, size_t size) {
  set_has_depth_data();
  depth_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KinectFrameMessage.depth_data)
}
inline ::std::string* KinectFrameMessage::mutable_depth_data() {
  set_has_depth_data();
  // @@protoc_insertion_point(field_mutable:KinectFrameMessage.depth_data)
  return depth_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* KinectFrameMessage::release_depth_data() {
  // @@protoc_insertion_point(field_release:KinectFrameMessage.depth_data)
  clear_has_depth_data();
  return depth_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void KinectFrameMessage::set_allocated_depth_data(::std::string* depth_data) {
  if (depth_data != NULL) {
    set_has_depth_data();
  } else {
    clear_has_depth_data();
  }
  depth_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), depth_data);
  // @@protoc_insertion_point(field_set_allocated:KinectFrameMessage.depth_data)
}

// required uint32 timestamp = 3;
inline bool KinectFrameMessage::has_timestamp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void KinectFrameMessage::set_has_timestamp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void KinectFrameMessage::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void KinectFrameMessage::clear_timestamp() {
  timestamp_ = 0u;
  clear_has_timestamp();
}
inline ::google::protobuf::uint32 KinectFrameMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.timestamp)
  return timestamp_;
}
inline void KinectFrameMessage::set_timestamp(::google::protobuf::uint32 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:KinectFrameMessage.timestamp)
}

// optional uint32 height = 4;
inline bool KinectFrameMessage::has_height() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void KinectFrameMessage::set_has_height() {
  _has_bits_[0] |= 0x00000008u;
}
inline void KinectFrameMessage::clear_has_height() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void KinectFrameMessage::clear_height() {
  height_ = 0u;
  clear_has_height();
}
inline ::google::protobuf::uint32 KinectFrameMessage::height() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.height)
  return height_;
}
inline void KinectFrameMessage::set_height(::google::protobuf::uint32 value) {
  set_has_height();
  height_ = value;
  // @@protoc_insertion_point(field_set:KinectFrameMessage.height)
}

// optional uint32 width = 5;
inline bool KinectFrameMessage::has_width() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void KinectFrameMessage::set_has_width() {
  _has_bits_[0] |= 0x00000010u;
}
inline void KinectFrameMessage::clear_has_width() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void KinectFrameMessage::clear_width() {
  width_ = 0u;
  clear_has_width();
}
inline ::google::protobuf::uint32 KinectFrameMessage::width() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.width)
  return width_;
}
inline void KinectFrameMessage::set_width(::google::protobuf::uint32 value) {
  set_has_width();
  width_ = value;
  // @@protoc_insertion_point(field_set:KinectFrameMessage.width)
}

// optional uint32 depth = 6;
inline bool KinectFrameMessage::has_depth() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void KinectFrameMessage::set_has_depth() {
  _has_bits_[0] |= 0x00000020u;
}
inline void KinectFrameMessage::clear_has_depth() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void KinectFrameMessage::clear_depth() {
  depth_ = 0u;
  clear_has_depth();
}
inline ::google::protobuf::uint32 KinectFrameMessage::depth() const {
  // @@protoc_insertion_point(field_get:KinectFrameMessage.depth)
  return depth_;
}
inline void KinectFrameMessage::set_depth(::google::protobuf::uint32 value) {
  set_has_depth();
  depth_ = value;
  // @@protoc_insertion_point(field_set:KinectFrameMessage.depth)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_KinectFrameMessage_2eproto__INCLUDED
